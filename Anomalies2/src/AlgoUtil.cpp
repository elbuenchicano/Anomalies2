#include "AlgoUtil.h"

std::vector<bool> algoUtil_int2boolVec(int val, size_t tam)
{
  std::vector<bool> res(tam, false);
  for (int i = static_cast<int>(tam - 1); i >= 0 && val; --i, val >>= 1)
    res[i] = val & 1;
  return res;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
double supp_Precision(Metric_units uni) {
  double den = (uni.tp_ + uni.fp_) + FLT_MIN;
  return uni.tp_ / den;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
double supp_Recall(Metric_units uni) {
  double den = (uni.tp_ + uni.fn_ + FLT_MIN);
  return uni.tp_ / den;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
double supp_FalsePositiveRate(Metric_units uni) {
  double den = (uni.fp_ + uni.tn_) + FLT_MIN;
  return uni.fp_ / den;
}
